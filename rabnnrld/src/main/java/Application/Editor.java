/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application;

import TwoDimensionalLists.*;
import LedAnimations.*;
import java.io.*;
import javax.swing.*;
import FileMananger.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import javax.swing.border.Border;
import java.awt.datatransfer.*;
import Listas.Aleatoria;
import java.awt.event.KeyEvent;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeListener;


/**
 *
 * @author alumno
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    public Editor() {
        initComponents();
    }

    public Editor(ITwoDimensionalLists tabla, String config) {
        initComponents();
        String[] parametros = config.split("-");
        jComboBox_TipoPlano.setSelectedItem(parametros[0]);
        jComboBox_TipoGrafico.setSelectedItem(parametros[1]);
        String textoEliminar = "";
        if(parametros[2].contains("figures:")){
            textoEliminar = "figures:";
        }else if(parametros[2].contains("text:")){
            textoEliminar = "text:";
        }
        texto = parametros[2];
        jTextField_TextoFigura.setText(texto.replaceAll(textoEliminar, ""));
        jSpinner_NumeroFilas.setValue(Integer.parseInt(parametros[3]));
        filas = Integer.parseInt(parametros[3]);
        jSpinner_NumeroColumnas.setValue(Integer.parseInt(parametros[4]));
        columnas = Integer.parseInt(parametros[4]);
        jTextField_CaracterEncendido.setText(parametros[5]);
        jTextField_EditarEncendido.setText(parametros[5]);
        encendido = parametros[5].charAt(0);
        jTextField_CaracterApagado.setText(parametros[6]);
        jTextField_EditarApagado.setText(parametros[6]);
        apagado = parametros[6].charAt(0);
        graficador = new SwingGraphicsLedScreen((TwoDimensionalLists) tabla, jTextPane_Pantalla);
        jTextPane_Pantalla.setText(tabla.getText());
        this.tabla = tabla;
        temp = this.tabla.getText();
    }

    public Editor(String file) {
        initComponents();
        String[] parametersFile = file.split("<>");
        abrirArchivo(parametersFile[1], parametersFile[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane_Pantalla = new javax.swing.JTextPane();
        jLabel_NombreArchivo = new javax.swing.JLabel();
        jLabel_UrlArchivo = new javax.swing.JLabel();
        jTabbedPane_Editor = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jComboBox_SecuenciaDirecciones = new javax.swing.JComboBox<>();
        jSpinner_SecuenciaPosiciones = new javax.swing.JSpinner();
        jSpinner_SecuenciaRetardo = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_Seciencia = new javax.swing.JList<>();
        jButton_Modificar = new javax.swing.JButton();
        jButton_EliminarInstruccion = new javax.swing.JButton();
        jButton_DuplicarInstruccion = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel_EditarTipoGrafico = new javax.swing.JPanel();
        jComboBox_EditarTipoGrafico = new javax.swing.JComboBox<>();
        jTextField_EditarTextoFigura = new javax.swing.JTextField();
        jTextField_EditarEncendido = new javax.swing.JTextField();
        jTextField_EditarApagado = new javax.swing.JTextField();
        jButton_Graficar = new javax.swing.JButton();
        jButton_Aminar = new javax.swing.JButton();
        jButton_Pausar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jButton_AgregarSecuencia = new javax.swing.JButton();
        jPanel_Direcciones = new javax.swing.JPanel();
        jComboBox_Direcciones = new javax.swing.JComboBox<>();
        jSpinner_Retardo = new javax.swing.JSpinner();
        jSpinner_Posiciones = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_Repeticiones = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton_Arriba = new javax.swing.JButton();
        jButton_Izquierda = new javax.swing.JButton();
        jButton_Derecha = new javax.swing.JButton();
        jButton_Abajo = new javax.swing.JButton();
        jButton_DiagonalARIZ = new javax.swing.JButton();
        jButton_DiagonalARDE = new javax.swing.JButton();
        jButton_DiagonalABDE = new javax.swing.JButton();
        jButton_DiagonalABIZ = new javax.swing.JButton();
        jPanel_MovimientosEnPantalla = new javax.swing.JPanel();
        jComboBox_MovimientosEnPantalla = new javax.swing.JComboBox<>();
        jButton_Detener = new javax.swing.JButton();
        jSpinner_PosicionesEnPantalla = new javax.swing.JSpinner();
        jSpinner_RetardoEnPantalla = new javax.swing.JSpinner();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jSlider_TamañoFuente = new javax.swing.JSlider();
        jSpinner_TamañoFuente = new javax.swing.JSpinner();
        jButton_DisminuirAncho = new javax.swing.JButton();
        jButton_DisminuirTamaño = new javax.swing.JButton();
        jButton_IncrementarTamaño = new javax.swing.JButton();
        jButton_IncrementarLargo = new javax.swing.JButton();
        jButton_IncrementarAncho = new javax.swing.JButton();
        jButton_DisminuirLargo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jSpinner_Verde = new javax.swing.JSpinner();
        jSlider_Verde = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jSpinner_Azul = new javax.swing.JSpinner();
        jSlider_Azul = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        jSpinner_Rojo = new javax.swing.JSpinner();
        jSlider_Rojo = new javax.swing.JSlider();
        jComboBox_ColorAplicado = new javax.swing.JComboBox<>();
        jButton_ColorDefecto = new javax.swing.JButton();
        jButton_EditarColor = new javax.swing.JButton();
        jToggleButton_Grosor = new javax.swing.JToggleButton();
        jLabel_Color = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jSpinner_NumeroFilas = new javax.swing.JSpinner();
        jSpinner_NumeroColumnas = new javax.swing.JSpinner();
        jTextField_CaracterApagado = new javax.swing.JTextField();
        jTextField_CaracterEncendido = new javax.swing.JTextField();
        jButton_ModificarPlano = new javax.swing.JButton();
        jPanel_TipoPlano = new javax.swing.JPanel();
        jComboBox_TipoPlano = new javax.swing.JComboBox<>();
        jPanel_TipoGrafico = new javax.swing.JPanel();
        jComboBox_TipoGrafico = new javax.swing.JComboBox<>();
        jTextField_TextoFigura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton_Abrir = new javax.swing.JButton();
        jButton_GuardarComo = new javax.swing.JButton();
        jButton_Nuevo = new javax.swing.JButton();
        jButton_Guardar = new javax.swing.JButton();
        jButton_RestablecerGrafica = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rensteom BannerLed Studio");
        setBackground(new java.awt.Color(250, 250, 250));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(778, 775));
        setSize(new java.awt.Dimension(1335, 770));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextPane_Pantalla.setEditable(false);
        jTextPane_Pantalla.setBackground(new java.awt.Color(250, 250, 250));
        jTextPane_Pantalla.setBorder(new javax.swing.border.MatteBorder(null));
        jTextPane_Pantalla.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTextPane_Pantalla.setDoubleBuffered(true);
        jTextPane_Pantalla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextPane_PantallaKeyPressed(evt);
            }
        });
        jTextPane_Pantalla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextPane_PantallaMouseClicked(evt);
            }
            private void jTextPane_PantallaMouseClicked(java.awt.event.MouseEvent evt) {
                Atajos adAtajos = new Atajos();
                adAtajos.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                adAtajos.setVisible(true);
            }
        });
        jScrollPane1.setViewportView(jTextPane_Pantalla);

        jLabel_NombreArchivo.setBackground(new java.awt.Color(250, 250, 250));
        jLabel_NombreArchivo.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel_NombreArchivo.setForeground(new java.awt.Color(51, 51, 51));
        jLabel_NombreArchivo.setText("  Archivo sin nombre");
        jLabel_NombreArchivo.setOpaque(true);

        jLabel_UrlArchivo.setForeground(new java.awt.Color(102, 102, 102));
        jLabel_UrlArchivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_UrlArchivo.setText("Archivo aún no guardado");
        jLabel_UrlArchivo.setOpaque(true);
        jLabel_UrlArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_UrlArchivoMouseClicked(evt);
            }
        });

        jTabbedPane_Editor.setFocusable(false);

        jPanel9.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(235, 235, 235));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edición de animaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel8.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jPanel8.setLayout(null);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimiento"));
        jPanel17.setLayout(null);

        jComboBox_SecuenciaDirecciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOVIMIENTO", "NORTE", "SUR", "ESTE", "OESTE", "NORESTE", "NOROESTE", "SURESTE", "SUROESTE", "INCREMENTAR", "DISMINUIR" }));
        jPanel17.add(jComboBox_SecuenciaDirecciones);
        jComboBox_SecuenciaDirecciones.setBounds(10, 20, 90, 30);

        jPanel8.add(jPanel17);
        jPanel17.setBounds(10, 130, 110, 60);

        jSpinner_SecuenciaPosiciones.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 5));
        jSpinner_SecuenciaPosiciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Posiciones"));
        jPanel8.add(jSpinner_SecuenciaPosiciones);
        jSpinner_SecuenciaPosiciones.setBounds(121, 140, 80, 40);

        jSpinner_SecuenciaRetardo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 100));
        jSpinner_SecuenciaRetardo.setBorder(javax.swing.BorderFactory.createTitledBorder("Retardo"));
        jPanel8.add(jSpinner_SecuenciaRetardo);
        jSpinner_SecuenciaRetardo.setBounds(203, 140, 80, 40);

        jList_Seciencia.setBorder(javax.swing.BorderFactory.createTitledBorder("Vista de secuencia"));
        jList_Seciencia.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList_SecienciaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList_Seciencia);

        jPanel8.add(jScrollPane2);
        jScrollPane2.setBounds(10, 20, 270, 100);

        jButton_Modificar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Modificar.setText("Modificar");
        jButton_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ModificarActionPerformed(evt);
            }
        });
        jPanel8.add(jButton_Modificar);
        jButton_Modificar.setBounds(192, 190, 92, 40);

        jButton_EliminarInstruccion.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_EliminarInstruccion.setText("Eliminar");
        jButton_EliminarInstruccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarInstruccionActionPerformed(evt);
            }
        });
        jPanel8.add(jButton_EliminarInstruccion);
        jButton_EliminarInstruccion.setBounds(10, 190, 92, 40);

        jButton_DuplicarInstruccion.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DuplicarInstruccion.setText("Duplicar");
        jButton_DuplicarInstruccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DuplicarInstruccionActionPerformed(evt);
            }
        });
        jPanel8.add(jButton_DuplicarInstruccion);
        jButton_DuplicarInstruccion.setBounds(101, 190, 92, 40);

        jPanel9.add(jPanel8);
        jPanel8.setBounds(0, 370, 295, 240);

        jPanel6.setBackground(new java.awt.Color(235, 235, 235));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gráficas en pantalla", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel6.setLayout(null);

        jPanel_EditarTipoGrafico.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de gráfico"));
        jPanel_EditarTipoGrafico.setLayout(null);

        jComboBox_EditarTipoGrafico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TEXTO", "FIGURAS" }));
        jComboBox_EditarTipoGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_EditarTipoGraficoActionPerformed(evt);
            }
        });
        jPanel_EditarTipoGrafico.add(jComboBox_EditarTipoGrafico);
        jComboBox_EditarTipoGrafico.setBounds(10, 20, 170, 30);

        jPanel6.add(jPanel_EditarTipoGrafico);
        jPanel_EditarTipoGrafico.setBounds(10, 20, 190, 60);

        jTextField_EditarTextoFigura.setBorder(javax.swing.BorderFactory.createTitledBorder("Texto a graficar:"));
        jPanel6.add(jTextField_EditarTextoFigura);
        jTextField_EditarTextoFigura.setBounds(10, 85, 188, 40);

        jTextField_EditarEncendido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_EditarEncendido.setText("֎");
        jTextField_EditarEncendido.setBorder(javax.swing.BorderFactory.createTitledBorder("Encendido"));
        jTextField_EditarEncendido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EditarEncendidoActionPerformed(evt);
            }
        });
        jPanel6.add(jTextField_EditarEncendido);
        jTextField_EditarEncendido.setBounds(202, 30, 80, 41);

        jTextField_EditarApagado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_EditarApagado.setText("¤");
        jTextField_EditarApagado.setBorder(javax.swing.BorderFactory.createTitledBorder("Apagado"));
        jPanel6.add(jTextField_EditarApagado);
        jTextField_EditarApagado.setBounds(202, 85, 80, 41);

        jButton_Graficar.setText("Graficar");
        jButton_Graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GraficarActionPerformed(evt);
            }
        });
        jPanel6.add(jButton_Graficar);
        jButton_Graficar.setBounds(10, 132, 270, 35);

        jPanel9.add(jPanel6);
        jPanel6.setBounds(0, 40, 295, 178);

        jButton_Aminar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Aminar.setText("Animar");
        jButton_Aminar.setToolTipText("(Crtl+E)");
        jPanel9.add(jButton_Aminar);
        jButton_Aminar.setBounds(147, 660, 148, 40);
        buttonAction = new AbstractAction("Animar") {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_AminarActionPerformed(evt);
            }
            private void jButton_AminarActionPerformed(java.awt.event.ActionEvent evt) {
                if(isAnimationActivate == false){
                    if (jComboBox_Repeticiones.getSelectedItem() == "∞") { modo = "BUCLE"; }
                    else { modo = jComboBox_Repeticiones.getSelectedItem() + "TIMES"; }
                    instruccion = getInstruction() + "/" + modo;
                    graficador.SequentialAnimation(instruccion);
                    isAnimationActivate = true;
                }
            }
        };
        jButton_Aminar.setAction(buttonAction);
        jButton_Aminar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_E, ActionEvent.CTRL_MASK), key);
        jButton_Aminar.getActionMap().put(key, buttonAction);
        jButton_Aminar.setToolTipText("(Ctrl+E)");

        jButton_Pausar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Pausar.setText("Pausar");
        jButton_Pausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PausarActionPerformed(evt);
            }
        });
        jPanel9.add(jButton_Pausar);
        jButton_Pausar.setBounds(0, 660, 148, 40);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel3.setText("Personalizar Gráficas y Animaciones");
        jPanel9.add(jLabel3);
        jLabel3.setBounds(10, 10, 270, 20);

        jPanel20.setBackground(new java.awt.Color(235, 235, 235));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Animaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel20.setLayout(null);

        jButton_AgregarSecuencia.setText("Agregar secuencia");
        jButton_AgregarSecuencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AgregarSecuenciaActionPerformed(evt);
            }
        });
        jPanel20.add(jButton_AgregarSecuencia);
        jButton_AgregarSecuencia.setBounds(10, 80, 275, 40);

        jPanel_Direcciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimiento"));
        jPanel_Direcciones.setLayout(null);

        jComboBox_Direcciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOVIMIENTO", "NORTE", "SUR", "ESTE", "OESTE", "NORESTE", "NOROESTE", "SURESTE", "SUROESTE", "INCREMENTAR", "DISMINUIR" }));
        jPanel_Direcciones.add(jComboBox_Direcciones);
        jComboBox_Direcciones.setBounds(10, 20, 90, 30);

        jPanel20.add(jPanel_Direcciones);
        jPanel_Direcciones.setBounds(10, 20, 110, 60);

        jSpinner_Retardo.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 100));
        jSpinner_Retardo.setBorder(javax.swing.BorderFactory.createTitledBorder("Retardo"));
        jPanel20.add(jSpinner_Retardo);
        jSpinner_Retardo.setBounds(203, 30, 80, 40);

        jSpinner_Posiciones.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 5));
        jSpinner_Posiciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Posiciones"));
        jPanel20.add(jSpinner_Posiciones);
        jSpinner_Posiciones.setBounds(121, 30, 80, 40);

        jPanel9.add(jPanel20);
        jPanel20.setBounds(0, 230, 295, 130);

        jLabel4.setText("veces.");
        jPanel9.add(jLabel4);
        jLabel4.setBounds(250, 630, 32, 14);

        jComboBox_Repeticiones.setEditable(true);
        jComboBox_Repeticiones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "∞" }));
        jPanel9.add(jComboBox_Repeticiones);
        jComboBox_Repeticiones.setBounds(150, 620, 90, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Ejecución de secuencia: ");
        jPanel9.add(jLabel5);
        jLabel5.setBounds(10, 630, 140, 14);

        jTabbedPane_Editor.addTab("Gráficas y animaciones", jPanel9);

        jPanel10.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(225, 225, 225));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Direcciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel2.setLayout(null);

        jButton_Arriba.setBackground(new java.awt.Color(102, 102, 102));
        jButton_Arriba.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Arriba.setText("NORTE");
        jButton_Arriba.setBorderPainted(false);
        jButton_Arriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ArribaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Arriba);
        jButton_Arriba.setBounds(112, 85, 72, 85);

        jButton_Izquierda.setBackground(new java.awt.Color(102, 102, 102));
        jButton_Izquierda.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Izquierda.setText("OESTE");
        jButton_Izquierda.setBorderPainted(false);
        jButton_Izquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IzquierdaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Izquierda);
        jButton_Izquierda.setBounds(7, 170, 140, 60);

        jButton_Derecha.setBackground(new java.awt.Color(102, 102, 102));
        jButton_Derecha.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Derecha.setText("ESTE");
        jButton_Derecha.setBorderPainted(false);
        jButton_Derecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DerechaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Derecha);
        jButton_Derecha.setBounds(147, 170, 140, 60);

        jButton_Abajo.setBackground(new java.awt.Color(102, 102, 102));
        jButton_Abajo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Abajo.setText("SUR");
        jButton_Abajo.setBorderPainted(false);
        jButton_Abajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbajoActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Abajo);
        jButton_Abajo.setBounds(112, 230, 72, 85);

        jButton_DiagonalARIZ.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DiagonalARIZ.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DiagonalARIZ.setText("NOROESTE");
        jButton_DiagonalARIZ.setBorderPainted(false);
        jButton_DiagonalARIZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DiagonalARIZActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_DiagonalARIZ);
        jButton_DiagonalARIZ.setBounds(22, 120, 90, 50);

        jButton_DiagonalARDE.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DiagonalARDE.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DiagonalARDE.setText("NORESTE");
        jButton_DiagonalARDE.setBorderPainted(false);
        jButton_DiagonalARDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DiagonalARDEActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_DiagonalARDE);
        jButton_DiagonalARDE.setBounds(184, 120, 90, 50);

        jButton_DiagonalABDE.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DiagonalABDE.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DiagonalABDE.setText("SURESTE");
        jButton_DiagonalABDE.setBorderPainted(false);
        jButton_DiagonalABDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DiagonalABDEActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_DiagonalABDE);
        jButton_DiagonalABDE.setBounds(184, 230, 90, 50);

        jButton_DiagonalABIZ.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DiagonalABIZ.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DiagonalABIZ.setText("SUROESTE");
        jButton_DiagonalABIZ.setBorderPainted(false);
        jButton_DiagonalABIZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DiagonalABIZActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_DiagonalABIZ);
        jButton_DiagonalABIZ.setBounds(22, 230, 90, 50);

        jPanel_MovimientosEnPantalla.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de movimiento en pantalla"));
        jPanel_MovimientosEnPantalla.setLayout(null);

        jComboBox_MovimientosEnPantalla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOVIMIENTO EN PASOS", "MOVIMIENTO EN BUCLE", "MOVIMIENTO PAUSADO" }));
        jComboBox_MovimientosEnPantalla.setDoubleBuffered(true);
        jPanel_MovimientosEnPantalla.add(jComboBox_MovimientosEnPantalla);
        jComboBox_MovimientosEnPantalla.setBounds(10, 20, 260, 30);

        jPanel2.add(jPanel_MovimientosEnPantalla);
        jPanel_MovimientosEnPantalla.setBounds(8, 20, 280, 60);

        jButton_Detener.setText("Detener");
        jButton_Detener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DetenerActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Detener);
        jButton_Detener.setBounds(107, 320, 80, 40);

        jSpinner_PosicionesEnPantalla.setModel(new javax.swing.SpinnerNumberModel(10, 0, null, 5));
        jSpinner_PosicionesEnPantalla.setBorder(javax.swing.BorderFactory.createTitledBorder("Posiciones"));
        jPanel2.add(jSpinner_PosicionesEnPantalla);
        jSpinner_PosicionesEnPantalla.setBounds(25, 295, 75, 36);

        jSpinner_RetardoEnPantalla.setModel(new javax.swing.SpinnerNumberModel(50, 0, null, 100));
        jSpinner_RetardoEnPantalla.setBorder(javax.swing.BorderFactory.createTitledBorder("Retardo"));
        jPanel2.add(jSpinner_RetardoEnPantalla);
        jSpinner_RetardoEnPantalla.setBounds(194, 295, 75, 36);

        jPanel10.add(jPanel2);
        jPanel2.setBounds(0, 40, 295, 370);

        jPanel15.setBackground(new java.awt.Color(225, 225, 225));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tamaño de elementos y pantalla", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel15.setLayout(null);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Tamaño de elementos en pantalla"));
        jPanel16.setLayout(null);

        jSlider_TamañoFuente.setValue(16);
        jSlider_TamañoFuente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_TamañoFuenteStateChanged(evt);
            }
        });
        jPanel16.add(jSlider_TamañoFuente);
        jSlider_TamañoFuente.setBounds(10, 20, 190, 26);

        jSpinner_TamañoFuente.setModel(new javax.swing.SpinnerNumberModel(16, 0, 100, 5));
        jSpinner_TamañoFuente.setValue(16);
        jSpinner_TamañoFuente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_TamañoFuenteStateChanged(evt);
            }
        });
        jPanel16.add(jSpinner_TamañoFuente);
        jSpinner_TamañoFuente.setBounds(210, 20, 60, 25);

        jPanel15.add(jPanel16);
        jPanel16.setBounds(8, 20, 280, 60);

        jButton_DisminuirAncho.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DisminuirAncho.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DisminuirAncho.setText("Disminuir ancho");
        jButton_DisminuirAncho.setBorderPainted(false);
        jButton_DisminuirAncho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DisminuirAnchoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_DisminuirAncho);
        jButton_DisminuirAncho.setBounds(145, 218, 140, 43);

        jButton_DisminuirTamaño.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DisminuirTamaño.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DisminuirTamaño.setText("Disminuir tamaño");
        jButton_DisminuirTamaño.setBorderPainted(false);
        jButton_DisminuirTamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DisminuirTamañoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_DisminuirTamaño);
        jButton_DisminuirTamaño.setBounds(10, 175, 135, 86);

        jButton_IncrementarTamaño.setBackground(new java.awt.Color(102, 102, 102));
        jButton_IncrementarTamaño.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_IncrementarTamaño.setText("Incrementar tamaño");
        jButton_IncrementarTamaño.setBorderPainted(false);
        jButton_IncrementarTamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IncrementarTamañoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_IncrementarTamaño);
        jButton_IncrementarTamaño.setBounds(10, 89, 135, 86);

        jButton_IncrementarLargo.setBackground(new java.awt.Color(102, 102, 102));
        jButton_IncrementarLargo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_IncrementarLargo.setText("Incrementar largo");
        jButton_IncrementarLargo.setBorderPainted(false);
        jButton_IncrementarLargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IncrementarLargoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_IncrementarLargo);
        jButton_IncrementarLargo.setBounds(145, 89, 140, 43);

        jButton_IncrementarAncho.setBackground(new java.awt.Color(102, 102, 102));
        jButton_IncrementarAncho.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_IncrementarAncho.setText("Incrementar ancho");
        jButton_IncrementarAncho.setBorderPainted(false);
        jButton_IncrementarAncho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IncrementarAnchoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_IncrementarAncho);
        jButton_IncrementarAncho.setBounds(145, 132, 140, 43);

        jButton_DisminuirLargo.setBackground(new java.awt.Color(102, 102, 102));
        jButton_DisminuirLargo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_DisminuirLargo.setText("Disminuir largo");
        jButton_DisminuirLargo.setBorderPainted(false);
        jButton_DisminuirLargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DisminuirLargoActionPerformed(evt);
            }
        });
        jPanel15.add(jButton_DisminuirLargo);
        jButton_DisminuirLargo.setBounds(145, 175, 140, 43);

        jPanel10.add(jPanel15);
        jPanel15.setBounds(0, 420, 295, 280);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel1.setText("Edición de Espacio y Simulación");
        jPanel10.add(jLabel1);
        jLabel1.setBounds(10, 10, 240, 20);

        jTabbedPane_Editor.addTab("Espacio y simulación", jPanel10);

        jPanel11.setLayout(null);

        jPanel7.setBackground(new java.awt.Color(235, 235, 235));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Variación de colores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel7.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Verde"));
        jPanel1.setLayout(null);

        jSpinner_Verde.setModel(new javax.swing.SpinnerNumberModel(255, 0, 255, 5));
        jSpinner_Verde.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_VerdeStateChanged(evt);
            }
        });
        jPanel1.add(jSpinner_Verde);
        jSpinner_Verde.setBounds(10, 20, 47, 20);

        jSlider_Verde.setMaximum(255);
        jSlider_Verde.setValue(255);
        jSlider_Verde.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_VerdeStateChanged(evt);
            }
        });
        jPanel1.add(jSlider_Verde);
        jSlider_Verde.setBounds(60, 15, 210, 26);

        jPanel7.add(jPanel1);
        jPanel1.setBounds(8, 130, 280, 50);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Azul"));
        jPanel3.setLayout(null);

        jSpinner_Azul.setModel(new javax.swing.SpinnerNumberModel(255, 0, 255, 5));
        jSpinner_Azul.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_AzulStateChanged(evt);
            }
        });
        jPanel3.add(jSpinner_Azul);
        jSpinner_Azul.setBounds(10, 20, 47, 20);

        jSlider_Azul.setMaximum(255);
        jSlider_Azul.setValue(255);
        jSlider_Azul.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_AzulStateChanged(evt);
            }
        });
        jPanel3.add(jSlider_Azul);
        jSlider_Azul.setBounds(60, 15, 210, 26);

        jPanel7.add(jPanel3);
        jPanel3.setBounds(8, 80, 280, 50);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Rojo"));
        jPanel4.setLayout(null);

        jSpinner_Rojo.setModel(new javax.swing.SpinnerNumberModel(255, 0, 255, 5));
        jSpinner_Rojo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_RojoStateChanged(evt);
            }
        });
        jPanel4.add(jSpinner_Rojo);
        jSpinner_Rojo.setBounds(10, 20, 47, 20);

        jSlider_Rojo.setMaximum(255);
        jSlider_Rojo.setValue(255);
        jSlider_Rojo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider_RojoStateChanged(evt);
            }
        });
        jPanel4.add(jSlider_Rojo);
        jSlider_Rojo.setBounds(60, 15, 210, 26);

        jPanel7.add(jPanel4);
        jPanel4.setBounds(8, 20, 280, 50);

        jComboBox_ColorAplicado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Color de pantalla", "Color de elementos", " " }));
        jComboBox_ColorAplicado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ColorAplicadoActionPerformed(evt);
            }
        });
        jPanel7.add(jComboBox_ColorAplicado);
        jComboBox_ColorAplicado.setBounds(50, 190, 140, 30);

        jButton_ColorDefecto.setText("Colores por defecto");
        jButton_ColorDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ColorDefectoActionPerformed(evt);
            }
        });
        jPanel7.add(jButton_ColorDefecto);
        jButton_ColorDefecto.setBounds(10, 230, 130, 40);

        jButton_EditarColor.setText("Editar colores");
        jButton_EditarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EditarColorActionPerformed(evt);
            }
        });
        jPanel7.add(jButton_EditarColor);
        jButton_EditarColor.setBounds(150, 230, 130, 40);

        jToggleButton_Grosor.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jToggleButton_Grosor.setText("N");
        jToggleButton_Grosor.addItemListener(new java.awt.event.ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent itemEvent) {
                int estado = itemEvent.getStateChange();
                switch(estado){
                    case ItemEvent.SELECTED: styleFont = 1; isBoldActivate = true; break;
                    case ItemEvent.DESELECTED: styleFont = 0;isBoldActivate = false; break;
                    default: break;
                }
                jToggleButton_Grosor.setFont(new java.awt.Font("Monospaced", styleFont, 11));
                jLabel_Color.setFont(new java.awt.Font("Tahoma", styleFont, 18));
            }
        });
        jPanel7.add(jToggleButton_Grosor);
        jToggleButton_Grosor.setBounds(10, 190, 39, 30);

        jLabel_Color.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_Color.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_Color.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Color.setText("¤֎¤֎¤");
        jLabel_Color.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel_Color.setOpaque(true);
        jPanel7.add(jLabel_Color);
        jLabel_Color.setBounds(200, 190, 80, 30);

        jPanel11.add(jPanel7);
        jPanel7.setBounds(0, 300, 295, 280);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel2.setText("Configurar BannerLed");
        jPanel11.add(jLabel2);
        jLabel2.setBounds(10, 10, 180, 20);

        jPanel12.setBackground(new java.awt.Color(235, 235, 235));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar Dimensiones y elementos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel12.setLayout(null);

        jSpinner_NumeroFilas.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 10));
        jSpinner_NumeroFilas.setBorder(javax.swing.BorderFactory.createTitledBorder("Filas"));
        jPanel12.add(jSpinner_NumeroFilas);
        jSpinner_NumeroFilas.setBounds(10, 150, 60, 41);

        jSpinner_NumeroColumnas.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 10));
        jSpinner_NumeroColumnas.setBorder(javax.swing.BorderFactory.createTitledBorder("Columnas"));
        jPanel12.add(jSpinner_NumeroColumnas);
        jSpinner_NumeroColumnas.setBounds(70, 150, 74, 41);

        jTextField_CaracterApagado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_CaracterApagado.setText("⬜");
        jTextField_CaracterApagado.setBorder(javax.swing.BorderFactory.createTitledBorder("Apagado"));
        jPanel12.add(jTextField_CaracterApagado);
        jTextField_CaracterApagado.setBounds(218, 150, 65, 41);

        jTextField_CaracterEncendido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_CaracterEncendido.setText("⬛");
        jTextField_CaracterEncendido.setBorder(javax.swing.BorderFactory.createTitledBorder("Encendido"));
        jPanel12.add(jTextField_CaracterEncendido);
        jTextField_CaracterEncendido.setBounds(146, 150, 71, 41);

        jButton_ModificarPlano.setText("Modificar Banner");
        jButton_ModificarPlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ModificarPlanoActionPerformed(evt);
            }
        });
        jPanel12.add(jButton_ModificarPlano);
        jButton_ModificarPlano.setBounds(10, 200, 275, 40);

        jPanel_TipoPlano.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de plano"));
        jPanel_TipoPlano.setLayout(null);

        jComboBox_TipoPlano.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLANO BIDIMENSIONAL DEFINIDO", "PLANO BIDIMENSIONAL AUTOMÁTICO" }));
        jComboBox_TipoPlano.setFocusable(false);
        jPanel_TipoPlano.add(jComboBox_TipoPlano);
        jComboBox_TipoPlano.setBounds(10, 20, 260, 30);

        jPanel12.add(jPanel_TipoPlano);
        jPanel_TipoPlano.setBounds(8, 20, 280, 60);

        jPanel_TipoGrafico.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de gráfico"));
        jPanel_TipoGrafico.setLayout(null);

        jComboBox_TipoGrafico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TEXTO", "FIGURAS" }));
        jComboBox_TipoGrafico.setFocusable(false);
        jComboBox_TipoGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TipoGraficoActionPerformed(evt);
            }
        });
        jPanel_TipoGrafico.add(jComboBox_TipoGrafico);
        jComboBox_TipoGrafico.setBounds(10, 20, 90, 30);

        jPanel12.add(jPanel_TipoGrafico);
        jPanel_TipoGrafico.setBounds(10, 80, 110, 60);

        jTextField_TextoFigura.setBorder(javax.swing.BorderFactory.createTitledBorder("Texto a graficar:"));
        jTextField_TextoFigura.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel12.add(jTextField_TextoFigura);
        jTextField_TextoFigura.setBounds(120, 90, 165, 40);

        jPanel11.add(jPanel12);
        jPanel12.setBounds(0, 40, 295, 250);

        jLabel6.setText("version 0.0.1.12.02102020");
        jPanel11.add(jLabel6);
        jLabel6.setBounds(10, 690, 140, 14);

        jTabbedPane_Editor.addTab("Editar Plano", jPanel11);

        jButton_Abrir.setBackground(new java.awt.Color(245, 245, 245));
        jButton_Abrir.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abrirArchivo.png"))); // NOI18N
        jButton_Abrir.setToolTipText("");
        jButton_Abrir.setBorder(null);
        jButton_Abrir.setBorderPainted(false);
        jButton_Abrir.setContentAreaFilled(false);
        jButton_Abrir.setDoubleBuffered(true);
        jButton_Abrir.setFocusable(false);
        jButton_Abrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Abrir.setOpaque(true);
        jButton_Abrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_AbrirMouseEntered(evt);
            }
            private void jButton_AbrirMouseEntered(java.awt.event.MouseEvent evt) {
                jButton_Abrir.setBackground(new java.awt.Color(200, 200, 200));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_AbrirMouseExited(evt);
            }
            private void jButton_AbrirMouseExited(java.awt.event.MouseEvent evt) {
                jButton_Abrir.setBackground(new java.awt.Color(245, 245, 245));
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_AbrirMousePressed(evt);
            }
            private void jButton_AbrirMousePressed(java.awt.event.MouseEvent evt) {
                jButton_Abrir.setBackground(new java.awt.Color(180, 180, 180));
            }
        });

        buttonAction = new AbstractAction("", jButton_Abrir.getIcon()) {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_AbrirActionPerformed(evt);
            }
            private void jButton_AbrirActionPerformed(java.awt.event.ActionEvent evt) {
                if(jTextPane_Pantalla.getText().length() == 0){}
                if (seleccionar.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
                    archivo = seleccionar.getSelectedFile();
                    if (archivo.getName().endsWith("bl")) {
                        String documento = FileMananger.AbrirArchivo(archivo);
                        if(jTextPane_Pantalla.getText().length() == 0){
                            String leerArchivo = FileMananger.AbrirArchivo(archivo);
                            leerArchivo = leerArchivo + "<>" + archivo.toString();
                            Editor editor = new Editor(leerArchivo);
                            editor.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                            editor.setVisible(true);
                        }else{
                            model.removeAllElements();
                            jList_Seciencia.removeAll();
                            abrirArchivo(archivo.toString(), documento);
                        }

                        //jtextpane.setText(documento);
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                    }
                }
            }
        };
        jButton_Abrir.setAction(buttonAction);
        jButton_Abrir.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_Q, ActionEvent.CTRL_MASK), key);
        jButton_Abrir.getActionMap().put(key, buttonAction);
        jButton_Abrir.setToolTipText("Abrir(Ctrl+Q)");

        jButton_GuardarComo.setBackground(new java.awt.Color(245, 245, 245));
        jButton_GuardarComo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_GuardarComo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardarArchivoComo.png"))); // NOI18N
        jButton_GuardarComo.setToolTipText("");
        jButton_GuardarComo.setBorder(null);
        jButton_GuardarComo.setBorderPainted(false);
        jButton_GuardarComo.setContentAreaFilled(false);
        jButton_GuardarComo.setDoubleBuffered(true);
        jButton_GuardarComo.setFocusable(false);
        jButton_GuardarComo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_GuardarComo.setOpaque(true);
        jButton_GuardarComo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_GuardarComoMouseEntered(evt);
            }
            private void jButton_GuardarComoMouseEntered(java.awt.event.MouseEvent evt) {
                jButton_GuardarComo.setBackground(new java.awt.Color(200, 200, 200));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_GuardarComoMouseExited(evt);
            }
            private void jButton_GuardarComoMouseExited(java.awt.event.MouseEvent evt) {
                jButton_GuardarComo.setBackground(new java.awt.Color(245, 245, 245));
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_GuardarComoMousePressed(evt);
            }
            private void jButton_GuardarComoMousePressed(java.awt.event.MouseEvent evt) {
                jButton_GuardarComo.setBackground(new java.awt.Color(180, 180, 180));
            }
        });

        buttonAction = new AbstractAction("", jButton_GuardarComo.getIcon()) {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_GuardarComoActionPerformed(evt);
            }
            private void jButton_GuardarComoActionPerformed(java.awt.event.ActionEvent evt) {
                String datos = "";
                try {
                    matriz = tabla.getMatrix();
                    datos = "" + filas + "<-->" + columnas + "<-->" + encendido + "<-->" + apagado + "<-->" + texto
                    + "\n<-->" + matriz + "<-->"
                    + instruccion;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Asegúrese que el archivo cuente por lo menos con una animación.", "ARCHIVO INCOMPLETO PARA GUARDADO", 0);
                    return;
                }

                if (seleccionar.showDialog(null, "Guardar como") == JFileChooser.APPROVE_OPTION) {
                    archivo = seleccionar.getSelectedFile();
                    if (archivo.getName().endsWith("bl")) {
                        String documento = datos;
                        String mensaje = FileMananger.GuardarArchivo2(archivo, documento);
                        if (mensaje != null) {
                            jLabel_UrlArchivo.setText(archivo.toString());
                            jLabel_NombreArchivo.setText("   " + archivo.getName());
                            JOptionPane.showMessageDialog(null, mensaje);
                        } else {
                            JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                    }
                }
            }
        };
        jButton_GuardarComo.setAction(buttonAction);
        jButton_GuardarComo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_D, ActionEvent.CTRL_MASK), key);
        jButton_GuardarComo.getActionMap().put(key, buttonAction);
        jButton_GuardarComo.setToolTipText("Guardar como(Ctrl+D)");

        jButton_Nuevo.setBackground(new java.awt.Color(245, 245, 245));
        jButton_Nuevo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nuevoArchivo.png"))); // NOI18N
        jButton_Nuevo.setToolTipText("");
        jButton_Nuevo.setBorder(null);
        jButton_Nuevo.setBorderPainted(false);
        jButton_Nuevo.setContentAreaFilled(false);
        jButton_Nuevo.setDoubleBuffered(true);
        jButton_Nuevo.setFocusable(false);
        jButton_Nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Nuevo.setOpaque(true);
        jButton_Nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_NuevoMouseEntered(evt);
            }
            private void jButton_NuevoMouseEntered(java.awt.event.MouseEvent evt) {
                jButton_Nuevo.setBackground(new java.awt.Color(200, 200, 200));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_NuevoMouseExited(evt);
            }
            private void jButton_NuevoMouseExited(java.awt.event.MouseEvent evt) {
                jButton_Nuevo.setBackground(new java.awt.Color(245, 245, 245));
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_NuevoMousePressed(evt);
            }
            private void jButton_NuevoMousePressed(java.awt.event.MouseEvent evt) {
                jButton_Nuevo.setBackground(new java.awt.Color(180, 180, 180));
            }
        });

        buttonAction = new AbstractAction("", jButton_Nuevo.getIcon()) {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_NuevoActionPerformed(evt);
            }
            private void jButton_NuevoActionPerformed(java.awt.event.ActionEvent evt) {
                generarNuevaAreaDeTrabajo();
            }
        };
        jButton_Nuevo.setAction(buttonAction);
        jButton_Nuevo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_W, ActionEvent.CTRL_MASK), key);
        jButton_Nuevo.getActionMap().put(key, buttonAction);
        jButton_Nuevo.setToolTipText("Nuevo(Ctrl+W)");

        jButton_Guardar.setBackground(new java.awt.Color(245, 245, 245));
        jButton_Guardar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardarArchivo.png"))); // NOI18N
        jButton_Guardar.setToolTipText("");
        jButton_Guardar.setBorder(null);
        jButton_Guardar.setBorderPainted(false);
        jButton_Guardar.setContentAreaFilled(false);
        jButton_Guardar.setDoubleBuffered(true);
        jButton_Guardar.setFocusable(false);
        jButton_Guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_Guardar.setOpaque(true);
        jButton_Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_GuardarMouseEntered(evt);
            }
            private void jButton_GuardarMouseEntered(java.awt.event.MouseEvent evt) {
                jButton_Guardar.setBackground(new java.awt.Color(200, 200, 200));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_GuardarMouseExited(evt);
            }
            private void jButton_GuardarMouseExited(java.awt.event.MouseEvent evt) {
                jButton_Guardar.setBackground(new java.awt.Color(245, 245, 245));
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_GuardarMousePressed(evt);
            }
            private void jButton_GuardarMousePressed(java.awt.event.MouseEvent evt) {
                jButton_Guardar.setBackground(new java.awt.Color(180, 180, 180));
            }
        });

        buttonAction = new AbstractAction("", jButton_Guardar.getIcon()) {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
            private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {
                String datos = "";
                try {
                    matriz = tabla.getMatrix();
                    datos = "" + filas + "<-->" + columnas + "<-->" + encendido + "<-->" + apagado + "<-->" + texto
                    + "\n<-->" + matriz + "<-->"
                    + instruccion;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Asegúrese que el archivo cuente por lo menos con una animación.", "ARCHIVO INCOMPLETO PARA GUARDADO", 0);
                    return;
                }

                try {
                    String documento = datos;
                    String mensaje = FileMananger.GuardarArchivo2(archivo, documento);
                    if (mensaje != null) {
                        JOptionPane.showMessageDialog(null, mensaje);
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                    }
                } catch (Exception e) {

                    if (seleccionar.showDialog(null, "Guardar como") == JFileChooser.APPROVE_OPTION) {
                        archivo = seleccionar.getSelectedFile();
                        if (archivo.getName().endsWith("bl")) {
                            String documento = datos;
                            String mensaje = FileMananger.GuardarArchivo2(archivo, documento);
                            if (mensaje != null) {
                                jLabel_UrlArchivo.setText(archivo.toString());
                                jLabel_NombreArchivo.setText("   " + archivo.getName());
                                JOptionPane.showMessageDialog(null, mensaje);
                            } else {
                                JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                        }
                    }
                }
            }
        };
        jButton_Guardar.setAction(buttonAction);
        jButton_Guardar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK), key);
        jButton_Guardar.getActionMap().put(key, buttonAction);
        jButton_Guardar.setToolTipText("Guardar(Ctrl+S)");

        jButton_RestablecerGrafica.setBackground(new java.awt.Color(245, 245, 245));
        jButton_RestablecerGrafica.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton_RestablecerGrafica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restablecerTexto.png"))); // NOI18N
        jButton_RestablecerGrafica.setToolTipText("");
        jButton_RestablecerGrafica.setBorder(null);
        jButton_RestablecerGrafica.setBorderPainted(false);
        jButton_RestablecerGrafica.setContentAreaFilled(false);
        jButton_RestablecerGrafica.setDoubleBuffered(true);
        jButton_RestablecerGrafica.setFocusable(false);
        jButton_RestablecerGrafica.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_RestablecerGrafica.setOpaque(true);
        jButton_RestablecerGrafica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGraficaMouseEntered(evt);
            }
            private void jButton_RestablecerGraficaMouseEntered(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGrafica.setBackground(new java.awt.Color(220, 220, 220));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGraficaMouseExited(evt);
            }
            private void jButton_RestablecerGraficaMouseExited(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGrafica.setBackground(new java.awt.Color(245, 245, 245));
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGraficaMousePressed(evt);
            }
            private void jButton_RestablecerGraficaMousePressed(java.awt.event.MouseEvent evt) {
                jButton_RestablecerGrafica.setBackground(new java.awt.Color(200, 200, 200));
            }
        });

        buttonAction = new AbstractAction("", jButton_RestablecerGrafica.getIcon()) {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton_RestablecerGraficaActionPerformed(evt);
            }
            private void jButton_RestablecerGraficaActionPerformed(java.awt.event.ActionEvent evt) {

                try {
                    tabla = new TwoDimensionalLists(temp);
                    jTextPane_Pantalla.setText(tabla.getText());
                    graficador = new SwingGraphicsLedScreen((TwoDimensionalLists) tabla, jTextPane_Pantalla);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Esto se debe a que el Banner contiene elementos nulos. Añadale elementos o cree una nueva tabla.", "RECUPERACIÓN DE BANNER NO PROCESADA", 0);
                }

            }
        };
        jButton_RestablecerGrafica.setAction(buttonAction);
        jButton_RestablecerGrafica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_Z, ActionEvent.CTRL_MASK), key);
        jButton_RestablecerGrafica.getActionMap().put(key, buttonAction);
        jButton_RestablecerGrafica.setToolTipText("Restablecer gráfica(Ctrl+Z)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jTabbedPane_Editor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_NombreArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel_UrlArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton_RestablecerGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton_Nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton_Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jButton_GuardarComo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane_Editor, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel_NombreArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_UrlArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                .addComponent(jButton_Abrir, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                .addComponent(jButton_Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                .addComponent(jButton_GuardarComo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                            .addComponent(jButton_RestablecerGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addGap(6, 6, 6))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    ITwoDimensionalLists tabla;
    SwingGraphicsLedScreen graficador;
    private boolean isBoldActivate = false, isAnimationActivate = false;
    private int columnas, filas, zoomX = 1, zoomY = 1;
    private char encendido, apagado;
    private String instruccion = "", modo, texto, matriz, temp, d = "";
    private int i = 0;
    Aleatoria direcciones = new Aleatoria(), posiciones = new Aleatoria(), retardo = new Aleatoria();
    private int red = 255, blue = 255, green = 255, tamañoFuente = 16, k, styleFont = 0;
    private String key = ""; private Action buttonAction;
    JFileChooser seleccionar = new JFileChooser();
    File archivo;
    DefaultListModel model = new DefaultListModel();


    private void jButton_DiagonalABIZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DiagonalABIZActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepDownLeft();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("DIAGONALABIZ-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("DIAGONALABIZ-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DiagonalABIZActionPerformed

    private void jButton_DiagonalABDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DiagonalABDEActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepDownRight();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("DIAGONALABDE-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("DIAGONALABDE-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DiagonalABDEActionPerformed

    private void jButton_DiagonalARDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DiagonalARDEActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepUpRight();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("DIAGONALARDE-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("DIAGONALARDE-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DiagonalARDEActionPerformed

    private void jButton_DiagonalARIZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DiagonalARIZActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepUpLeft();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("DIAGONALARIZ-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("DIAGONALARIZ-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DiagonalARIZActionPerformed

    private void jButton_AbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbajoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepDown();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("DOWN-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("DOWN-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_AbajoActionPerformed

    private void jButton_DerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DerechaActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepRight();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("RIGHT-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("RIGHT-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DerechaActionPerformed

    private void jButton_ArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ArribaActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepUp();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("UP-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("UP-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_ArribaActionPerformed

    private void jButton_IzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IzquierdaActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.MoveOneStepLeft();
                break;
            case "MOVIMIENTO EN BUCLE":
                graficador.Animation("LEFT-BUCLE", 1, retardo);
                break;
            case "MOVIMIENTO PAUSADO":
                graficador.Animation("LEFT-VIEW", pasos, retardo);
                break;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_IzquierdaActionPerformed

    private void jButton_DisminuirTamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DisminuirTamañoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.DecreaseTextSize();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        if (zoomX > 1) {
            zoomX--;
            columnas /= zoomX;
        }
        if (zoomY > 1) {
            zoomY--;
            filas /= zoomY;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DisminuirTamañoActionPerformed

    private void jButton_DisminuirAnchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DisminuirAnchoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.DecreaseTextSizeWide();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        if (zoomX > 1) {
            zoomX--;
            columnas /= zoomX;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DisminuirAnchoActionPerformed

    private void jButton_GraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GraficarActionPerformed
        com.mxrck.autocompleter.TextAutoCompleter tac = new com.mxrck.autocompleter.TextAutoCompleter(jTextField_EditarTextoFigura);
        
        if (jComboBox_EditarTipoGrafico.getSelectedItem() == "TEXTO") {
            texto = "text:" + jTextField_EditarTextoFigura.getText();
            tac.removeAllItems();
        } else if (jComboBox_EditarTipoGrafico.getSelectedItem() == "FIGURAS") {
            texto = "figures:" + jTextField_EditarTextoFigura.getText();
            tac.addItem("pelota");
            tac.addItem("auto");
            tac.addItem("corazon");
            tac.addItem("rombo");
            tac.addItem("humano");
            tac.addItem("barco");
            tac.addItem("serpiente");
            tac.addItem("tuerca");
            tac.addItem("puntero");
            tac.addItem("peligro");
            tac.addItem("estrella");
        }
        apagado = jTextField_EditarApagado.getText().charAt(0);
        encendido = jTextField_EditarEncendido.getText().charAt(0);
        
        if(encendido == apagado){jTextField_EditarEncendido.setText(""); jTextField_EditarApagado.setText(""); JOptionPane.showMessageDialog(null, "Esto se debe a que los caracteres de encendido y apagado son iguales. Cambielos para lograr realizar su gráfico.", "CARACTERES IGUALES", 1);return;}
        else if(encendido == ' ' || apagado == ' '){ jTextField_EditarEncendido.setText(""); jTextField_EditarApagado.setText(""); JOptionPane.showMessageDialog(null, "Esto se debe a que los caracteres de encendido o apagado contienen algún caracter inválido e incompatible con la estructura de los archivos \".bl\"", "CARACTER INVÁLIDO PARA EL GRÁFICO", 0);return;}
        
        try{
            tabla.changeChars(encendido, apagado);
        }catch(Exception ex){JOptionPane.showMessageDialog(null, "Esto se debe a que el plano está inicializado en 0x0. Para solucionar este problema, cambie a \"Plano Bidimensional Automático\" o agrega el número de filas y columnas.", "NO SE PUDO PROCESAR EL GRÁFICO", 0);}
        
        try{
            graficador.GraphLedDisplay(texto);
            temp = tabla.getText();
        }catch(Exception ex){JOptionPane.showMessageDialog(null, "Para lograr graficar lo que desea, es necesario que indique que elemnto desea graficar.", "EL CAMPO DE TEXTO ESTÁ VACÍO", 0);
        }
        
    }//GEN-LAST:event_jButton_GraficarActionPerformed

    private void jButton_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ModificarActionPerformed
        if (jComboBox_SecuenciaDirecciones.getSelectedItem() != "MOVIMIENTO") {
            direcciones.reemplace(k, jComboBox_SecuenciaDirecciones.getSelectedItem());
            posiciones.reemplace(k, jSpinner_SecuenciaPosiciones.getValue());
            retardo.reemplace(k, jSpinner_SecuenciaRetardo.getValue());
            model.setElementAt(direcciones.get(k) + ": " + posiciones.get(k) + " - " + retardo.get(k), k);
            jList_Seciencia.setModel(model);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un movimiento válido para la animación.", "MOVIMIENTO INVÁLIDO", 1);
        }
    }//GEN-LAST:event_jButton_ModificarActionPerformed
   
    private void jButton_IncrementarTamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IncrementarTamañoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.IncreaseTextSize();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        zoomX++;
        zoomY++;
        columnas *= zoomX;
        filas *= zoomY;
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_IncrementarTamañoActionPerformed

    private void jButton_IncrementarLargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IncrementarLargoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.IncreaseTextSizeLong();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        zoomX++;
        columnas *= zoomX;
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_IncrementarLargoActionPerformed

    private void jButton_IncrementarAnchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IncrementarAnchoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.IncreaseTextSizeWide();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        zoomY++;
        filas *= zoomY;
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_IncrementarAnchoActionPerformed

    private void jButton_DisminuirLargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DisminuirLargoActionPerformed
        graficador.StopAnimation();
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        switch (movimientoEnPantalla) {
            case "MOVIMIENTO EN PASOS":
                graficador.DecreaseTextSizeLong();
                break;
            case "MOVIMIENTO EN BUCLE":
                break;
            case "MOVIMIENTO PAUSADO":
                break;
        }
        if (zoomY > 1) {
            zoomY--;
            filas /= zoomY;
        }
        temp = tabla.getText();
    }//GEN-LAST:event_jButton_DisminuirLargoActionPerformed

    private void jButton_PausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PausarActionPerformed
        graficador.StopAnimation();
    }//GEN-LAST:event_jButton_PausarActionPerformed

    private void jButton_EliminarInstruccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarInstruccionActionPerformed
        try {
            direcciones.remove(k);
            posiciones.remove(k);
            retardo.remove(k);
            model.remove(k);
            jList_Seciencia.setModel(model);
            i--;
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton_EliminarInstruccionActionPerformed

    private void jButton_DuplicarInstruccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DuplicarInstruccionActionPerformed
        direcciones.add(i, direcciones.get(k));
        posiciones.add(i, posiciones.get(k));
        retardo.add(i, retardo.get(k));
        model.addElement(direcciones.get(i) + ": " + posiciones.get(i) + " - " + retardo.get(i));
        jList_Seciencia.setModel(model);
        i++;
    }//GEN-LAST:event_jButton_DuplicarInstruccionActionPerformed

   
    private void jButton_AgregarSecuenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AgregarSecuenciaActionPerformed
        String movimiento = jComboBox_Direcciones.getSelectedItem().toString();
        if (!"MOVIMIENTO".equals(movimiento)) {
            switch (movimiento) {
                case "NORTE":
                    direcciones.add(i, "NORTE");
                    break;
                case "SUR":
                    direcciones.add(i, "SUR");
                    break;
                case "ESTE":
                    direcciones.add(i, "ESTE");
                    break;
                case "OESTE":
                    direcciones.add(i, "OESTE");
                    break;
                case "NORESTE":
                    direcciones.add(i, "NORESTE");
                    break;
                case "NOROESTE":
                    direcciones.add(i, "NOROESTE");
                    break;
                case "SURESTE":
                    direcciones.add(i, "SURESTE");
                    break;
                case "SUROESTE":
                    direcciones.add(i, "SUROESTE");
                    break;
                case "INCREMENTAR":
                    direcciones.add(i, "INCREMENTAR");
                    break;
                case "DISMINUIR":
                    direcciones.add(i, "DISMINUIR");
                    break;
            }
            jComboBox_SecuenciaDirecciones.addItem(direcciones.get(i).toString());
            posiciones.add(i, jSpinner_Posiciones.getValue());
            retardo.add(i, jSpinner_Retardo.getValue());
            model.addElement(direcciones.get(i) + ": " + posiciones.get(i) + " - " + retardo.get(i));
            jList_Seciencia.setModel(model);
            i++;
            jComboBox_SecuenciaDirecciones.setSelectedItem("MOVIMIENTO");
            jSpinner_Posiciones.setValue(0);
            jSpinner_Retardo.setValue(0);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un movimiento válido para la animación.", "MOVIMIENTO INVÁLIDO", 1);
        }


    }//GEN-LAST:event_jButton_AgregarSecuenciaActionPerformed

    private void jButton_DetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DetenerActionPerformed
        graficador.StopAnimation();
    }//GEN-LAST:event_jButton_DetenerActionPerformed

    private void jSlider_TamañoFuenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_TamañoFuenteStateChanged
        tamañoFuente = jSlider_TamañoFuente.getValue();
        jSpinner_TamañoFuente.setValue(tamañoFuente);
        jTextPane_Pantalla.setFont(new java.awt.Font("Monospaced", styleFont, tamañoFuente));
    }//GEN-LAST:event_jSlider_TamañoFuenteStateChanged

    private void jSpinner_TamañoFuenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_TamañoFuenteStateChanged
        tamañoFuente = Integer.parseInt(jSpinner_TamañoFuente.getValue().toString());
        jSlider_TamañoFuente.setValue(tamañoFuente);
        jTextPane_Pantalla.setFont(new java.awt.Font("Monospaced", styleFont, tamañoFuente));
    }//GEN-LAST:event_jSpinner_TamañoFuenteStateChanged

    private void jComboBox_EditarTipoGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_EditarTipoGraficoActionPerformed
        if (jComboBox_EditarTipoGrafico.getSelectedItem() == "TEXTO") {
            jTextField_EditarTextoFigura.setBorder(new javax.swing.border.TitledBorder("Texto a graficar:"));
        } else {
            jTextField_EditarTextoFigura.setBorder(new javax.swing.border.TitledBorder("Elemento a graficar:"));
        }
    }//GEN-LAST:event_jComboBox_EditarTipoGraficoActionPerformed

    private void jList_SecienciaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList_SecienciaValueChanged
        k = new Integer(jList_Seciencia.getSelectedIndex());
        //ERROR
        try {
            jSpinner_SecuenciaPosiciones.setValue(posiciones.get(k));
            jSpinner_SecuenciaRetardo.setValue(retardo.get(k));
            jComboBox_SecuenciaDirecciones.setSelectedItem(direcciones.get(k));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jList_SecienciaValueChanged

    private void jButton_EditarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EditarColorActionPerformed
        /*if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jTextPane_Pantalla.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jTextPane_Pantalla.setForeground(new Color(red, green, blue));
        }*/
        jTextPane_Pantalla.setFont(new java.awt.Font("Monospaced", styleFont, tamañoFuente));
        jTextPane_Pantalla.setBackground(jLabel_Color.getBackground());
        jTextPane_Pantalla.setForeground(jLabel_Color.getForeground());
    }//GEN-LAST:event_jButton_EditarColorActionPerformed

    private void jButton_ColorDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ColorDefectoActionPerformed
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(Color.WHITE);
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jButton_ColorDefectoActionPerformed

    private void jSlider_RojoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_RojoStateChanged
        int rojo = jSlider_Rojo.getValue();
        red = rojo;
        jSpinner_Rojo.setValue(rojo);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSlider_RojoStateChanged

    private void jSpinner_RojoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_RojoStateChanged
        int rojo = Integer.parseInt(jSpinner_Rojo.getValue().toString());
        red = rojo;
        jSlider_Rojo.setValue(rojo);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSpinner_RojoStateChanged


    private void jButton_ModificarPlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ModificarPlanoActionPerformed
        encendido = jTextField_CaracterEncendido.getText().charAt(0);
        apagado = jTextField_CaracterApagado.getText().charAt(0);
        
        if(encendido == apagado){jTextField_CaracterEncendido.setText(""); jTextField_CaracterApagado.setText(""); JOptionPane.showMessageDialog(null, "Esto se debe a que los caracteres de encendido y apagado son iguales. Cambielos para lograr realizar su gráfico.", "CARACTERES IGUALES", 1);return;}
        else if(encendido == ' ' || apagado == ' '){ jTextField_CaracterEncendido.setText(""); jTextField_CaracterApagado.setText(""); JOptionPane.showMessageDialog(null, "Esto se debe a que los caracteres de encendido o apagado contienen algún caracter inválido e incompatible con la estructura de los archivos \".bl\"", "CARACTER INVÁLIDO PARA EL GRÁFICO", 0);return;}
        
        if (jComboBox_TipoGrafico.getSelectedItem() == "TEXTO") {
            texto = "text:" + jTextField_TextoFigura.getText();
        } else if (jComboBox_TipoGrafico.getSelectedItem() == "FIGURAS") {
            texto = "figures:" + jTextField_TextoFigura.getText();
        }
        
        if(texto == "text:"|| texto == "figures:"){
            JOptionPane.showMessageDialog(null, "Para lograr graficar lo que desea, es necesario que indique que elemnto desea graficar.", "EL CAMPO DE TEXTO ESTÁ VACÍO", 0);
            return;
        }

        if (jComboBox_TipoPlano.getSelectedItem() == "PLANO BIDIMENSIONAL AUTOMÁTICO") {
            tabla = new TwoDimensionalLists(texto, encendido, apagado);
            filas = tabla.rowLength();
            columnas = tabla.columnLength();
        } else if (jComboBox_TipoPlano.getSelectedItem() == "PLANO BIDIMENSIONAL DEFINIDO") {
            filas = Integer.parseInt(jSpinner_NumeroFilas.getValue().toString());
            columnas = Integer.parseInt(jSpinner_NumeroColumnas.getValue().toString());
            if(filas == 0 || columnas == 0){
                JOptionPane.showMessageDialog(null, "En un PLANO BIDIMENSIONAL DEFINIDO es necesario que las filas y columnas sean mayores y diferentes a cero.", "EL CAMPO DE TEXTO ESTÁ VACÍO", 0);
                return;
            }
            tabla = new TwoDimensionalLists(filas, columnas, encendido, apagado);
            tabla.setText(texto);
        }
        jTextField_EditarEncendido.setText(""+encendido); jTextField_EditarApagado.setText(""+apagado);
        graficador = new SwingGraphicsLedScreen((TwoDimensionalLists) tabla, jTextPane_Pantalla);
        jTextPane_Pantalla.setText(tabla.getText());

        temp = tabla.getText();
    }//GEN-LAST:event_jButton_ModificarPlanoActionPerformed

    private void jComboBox_TipoGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TipoGraficoActionPerformed
        com.mxrck.autocompleter.TextAutoCompleter tac = new com.mxrck.autocompleter.TextAutoCompleter(jTextField_TextoFigura);
        
        if (jComboBox_TipoGrafico.getSelectedItem() == "TEXTO") {
            jTextField_TextoFigura.setBorder(new javax.swing.border.TitledBorder("Texto a graficar:"));
            tac.removeAllItems();
        } else {
            jTextField_TextoFigura.setBorder(new javax.swing.border.TitledBorder("Elemento a graficar:"));
            tac.addItem("pelota");
            tac.addItem("auto");
            tac.addItem("corazon");
            tac.addItem("rombo");
            tac.addItem("humano");
            tac.addItem("barco");
            tac.addItem("serpiente");
            tac.addItem("tuerca");
            tac.addItem("puntero");
            tac.addItem("peligro");
            tac.addItem("estrella");
        }
    }//GEN-LAST:event_jComboBox_TipoGraficoActionPerformed

    private void jComboBox_ColorAplicadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ColorAplicadoActionPerformed
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            red = jTextPane_Pantalla.getBackground().getRed();
            blue = jTextPane_Pantalla.getBackground().getBlue();
            green = jTextPane_Pantalla.getBackground().getGreen();
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            red = jTextPane_Pantalla.getForeground().getRed();
            blue = jTextPane_Pantalla.getForeground().getBlue();
            green = jTextPane_Pantalla.getForeground().getGreen();
        }
        jSpinner_Rojo.setValue(red);
        jSpinner_Azul.setValue(blue);
        jSpinner_Verde.setValue(green);
        jSlider_Rojo.setValue(red);
        jSlider_Azul.setValue(blue);
        jSlider_Verde.setValue(green);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jComboBox_ColorAplicadoActionPerformed

    private void jSpinner_AzulStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_AzulStateChanged
        int azul = Integer.parseInt(jSpinner_Azul.getValue().toString());
        blue = azul;
        jSlider_Azul.setValue(azul);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSpinner_AzulStateChanged

    private void jSlider_AzulStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_AzulStateChanged
        int azul = jSlider_Azul.getValue();
        blue = azul;
        jSpinner_Azul.setValue(azul);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSlider_AzulStateChanged

    private void jSpinner_VerdeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_VerdeStateChanged
        int verde = Integer.parseInt(jSpinner_Verde.getValue().toString());
        green = verde;
        jSlider_Verde.setValue(verde);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSpinner_VerdeStateChanged

    private void jSlider_VerdeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider_VerdeStateChanged
        int verde = jSlider_Verde.getValue();
        green = verde;
        jSpinner_Verde.setValue(verde);
        if (jComboBox_ColorAplicado.getSelectedItem() == "Color de pantalla") {
            jLabel_Color.setBackground(new Color(red, green, blue));
        } else if (jComboBox_ColorAplicado.getSelectedItem() == "Color de elementos") {
            jLabel_Color.setForeground(new Color(red, green, blue));
        }
    }//GEN-LAST:event_jSlider_VerdeStateChanged

    private void jLabel_UrlArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_UrlArchivoMouseClicked
        try{
            StringSelection stringSelection = new StringSelection(jLabel_UrlArchivo.getText());
            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
            clpbrd.setContents(stringSelection, null);
            JOptionPane.showMessageDialog(null, "Se ha copiado en el portapapeles el enlace de ubicación del archivo.", "LOCALIZACIÓN COPIADA", 1);
        }catch(Exception e){}
    }//GEN-LAST:event_jLabel_UrlArchivoMouseClicked

    private void jTextPane_PantallaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPane_PantallaKeyPressed
        
        String movimientoEnPantalla = (String) jComboBox_MovimientosEnPantalla.getSelectedItem();
        int pasos = Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString());
        int retardo = Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString());
        //UN PASO
        if(evt.isAltDown()){
            graficador.StopAnimation();
            switch(evt.getKeyCode()){
                case KeyEvent.VK_UP: case KeyEvent.VK_W: graficador.MoveOneStepUp();break;
                case KeyEvent.VK_DOWN: case KeyEvent.VK_X: graficador.MoveOneStepDown();break;
                case KeyEvent.VK_LEFT: case KeyEvent.VK_A: graficador.MoveOneStepLeft();break;
                case KeyEvent.VK_RIGHT: case KeyEvent.VK_D: graficador.MoveOneStepRight();break;
                
                case KeyEvent.VK_Q: graficador.MoveOneStepUpLeft();break;
                case KeyEvent.VK_E: graficador.MoveOneStepUpRight();break;
                case KeyEvent.VK_Z: graficador.MoveOneStepDownLeft();break;
                case KeyEvent.VK_C: graficador.MoveOneStepDownRight();break;
            }
            temp = tabla.getText();
        }
        //BUCLE
        if(evt.isShiftDown()){
            graficador.StopAnimation();
            switch(evt.getKeyCode()){
                case KeyEvent.VK_UP: case KeyEvent.VK_W: graficador.Animation("UP-BUCLE", 1, retardo);break;
                case KeyEvent.VK_DOWN: case KeyEvent.VK_X: graficador.Animation("DOWN-BUCLE", 1, retardo); break;
                case KeyEvent.VK_LEFT: case KeyEvent.VK_A: graficador.Animation("LEFT-BUCLE", 1, retardo); break;
                case KeyEvent.VK_RIGHT: case KeyEvent.VK_D: graficador.Animation("RIGHT-BUCLE", 1, retardo); break;
                
                case KeyEvent.VK_Q: graficador.Animation("DIAGONALARIZ-BUCLE", 1, retardo); break;
                case KeyEvent.VK_E: graficador.Animation("DIAGONALARDE-BUCLE", 1, retardo); break;
                case KeyEvent.VK_Z: graficador.Animation("DIAGONALABIZ-BUCLE", 1, retardo); break;
                case KeyEvent.VK_C: graficador.Animation("DIAGONALABDE-BUCLE", 1, retardo); break;
            }
        }
        //PAUSADO
        if(evt.isShiftDown() && evt.isAltDown()){
            graficador.StopAnimation();
            switch(evt.getKeyCode()){
                case KeyEvent.VK_UP: case KeyEvent.VK_W: graficador.Animation("UP-VIEW", pasos, retardo);break;
                case KeyEvent.VK_DOWN: case KeyEvent.VK_X: graficador.Animation("DOWN-VIEW", pasos, retardo); break;
                case KeyEvent.VK_LEFT: case KeyEvent.VK_A: graficador.Animation("LEFT-VIEW", pasos, retardo); break;
                case KeyEvent.VK_RIGHT: case KeyEvent.VK_D: graficador.Animation("RIGHT-VIEW", pasos, retardo); break;
                
                case KeyEvent.VK_Q: graficador.Animation("DIAGONALARIZ-VIEW", pasos, retardo); break;
                case KeyEvent.VK_E: graficador.Animation("DIAGONALARDE-VIEW", pasos, retardo); break;
                case KeyEvent.VK_Z: graficador.Animation("DIAGONALABIZ-VIEW", pasos, retardo); break;
                case KeyEvent.VK_C: graficador.Animation("DIAGONALABDE-VIEW", pasos, retardo); break;
            
            }
            temp = tabla.getText();
        }
        
        if(evt.isControlDown()){
            switch(evt.getKeyCode()){
                case KeyEvent.VK_UP: tamañoFuente = jSlider_TamañoFuente.getValue()+1; break;
                case KeyEvent.VK_DOWN: tamañoFuente = jSlider_TamañoFuente.getValue()-1; break;
                case KeyEvent.VK_SPACE: graficador.StopAnimation(); temp = tabla.getText(); break;
                case KeyEvent.VK_C: jTextPane_Pantalla.copy(); JOptionPane.showMessageDialog(null, "Se ha copiado en el portapapeles el gráfico del archivo.", "GRÁFICO COPIADO", 1); break;
                case KeyEvent.VK_N: {
                    if(isBoldActivate == false){
                        styleFont = 1;
                        isBoldActivate = true;
                    }else{
                        styleFont = 0;
                        isBoldActivate = false;
                    }
                    jToggleButton_Grosor.setSelected(isBoldActivate);
                    jToggleButton_Grosor.setFont(new java.awt.Font("Monospaced", styleFont, 11));
                } break;
            }
            jSpinner_TamañoFuente.setValue(tamañoFuente);
            jTextPane_Pantalla.setFont(new java.awt.Font("Monospaced", styleFont, tamañoFuente));
        }
        
        /* if(evt.isAltDown()){
            switch(evt.getKeyCode()){
                case com.sun.glass.events.KeyEvent.VK_UP: setTitle("U");break;
                case com.sun.glass.events.KeyEvent.VK_DOWN:setTitle("D"); break;
                case com.sun.glass.events.KeyEvent.VK_LEFT:setTitle("L"); break;
                case com.sun.glass.events.KeyEvent.VK_RIGHT:setTitle("R"); break;
            }
        }
        if(evt.getKeyCode()== com.sun.glass.events.KeyEvent.VK_D){
            swD = true; graficador.StopAnimation();JOptionPane.showMessageDialog(null, "TECLA D ACTIVADA");
        }else{
            if(swD && evt.getKeyCode()==com.sun.glass.events.KeyEvent.VK_UP){
                graficador.Animation("UP-VIEW", Integer.parseInt(jSpinner_PosicionesEnPantalla.getValue().toString()), Integer.parseInt(jSpinner_RetardoEnPantalla.getValue().toString()));
                
                swD=false;
            }else if(swS && evt.getKeyCode()==com.sun.glass.events.KeyEvent.VK_LEFT){
                jTextPane_Pantalla.setText("LEFT-A");
                swD=false;
            }else if(swA && evt.getKeyCode()==com.sun.glass.events.KeyEvent.VK_RIGHT){
                jTextPane_Pantalla.setText("RIGHT-A");
                swD=false;
            }else if(swA && evt.getKeyCode()==com.sun.glass.events.KeyEvent.VK_DOWN){
                jTextPane_Pantalla.setText("DOWN-A");
                swD=false;
            }else{swD=false;graficador.StopAnimation();}
        }*/
    }//GEN-LAST:event_jTextPane_PantallaKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        seleccionar.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivo BannerLed" , "bl", "bnrld", "mbl", "mbnrld", "gbl", "pryctbl"));
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/BannerLedIcon.png")));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/blStudio.png")).getImage());
    }//GEN-LAST:event_formWindowOpened

    private void jTextField_EditarEncendidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EditarEncendidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_EditarEncendidoActionPerformed

    private String getInstruction() {
        String[] newDireccion = new String[]{"DIAGONALARDE", "DIAGONALARIZ", "DIAGONALABDE", "DIAGONALABIZ", "ARRIBA", "ABAJO", "IZQUIERDA", "DERECHA"};
        String[] olddirection = new String[]{"NORESTE", "NOROESTE", "SURESTE", "SUROESTE", "NORTE", "SUR", "OESTE", "ESTE"};
        String secuencia = "";
        for (int i = 0; i < this.i; i++) {
            String intruccion = direcciones.get(i) + ":" + posiciones.get(i) + "-" + retardo.get(i);
            secuencia += intruccion;
            if (i < this.i - 1) {
                secuencia += "_";
            }
        }
        for (int i = 0; i < olddirection.length; i++) {
            secuencia = secuencia.replaceAll(olddirection[i], newDireccion[i]);
        }
        return secuencia;
    }

    private void abrirArchivo(String nameFile, String contentFile) {
        String nombreArchivo = nameFile;
        String[] parameters = contentFile.split("<-->");
        filas = Integer.parseInt(parameters[0]);
        columnas = Integer.parseInt(parameters[1]);
        encendido = parameters[2].charAt(0);
        apagado = parameters[3].charAt(0);
        String textoEliminar = "";
        if(parameters[4].contains("figures:")){
            textoEliminar = "figures:";
        }else if(parameters[4].contains("text:")){
            textoEliminar = "text:";
        }
        texto = parameters[4].replaceAll(textoEliminar, "");
        matriz = parameters[5];
        String[] parametrosSecuencia = parameters[6].split("/");
        instruccion = parametrosSecuencia[0];
        modo = parametrosSecuencia[1];
        tabla = new TwoDimensionalLists(filas, columnas, apagado, encendido);
        tabla.setMatrix(matriz);
        jTextField_TextoFigura.setText(texto);
        jSpinner_NumeroFilas.setValue(filas);
        jSpinner_NumeroColumnas.setValue(columnas);
        jTextField_CaracterEncendido.setText("" + encendido);
        jTextField_EditarEncendido.setText("" + encendido);
        jTextField_CaracterApagado.setText("" + apagado);
        jTextField_EditarApagado.setText("" + apagado);
        graficador = new SwingGraphicsLedScreen((TwoDimensionalLists) tabla, jTextPane_Pantalla);
        jTextPane_Pantalla.setText(tabla.getText());
        temp = this.tabla.getText();

        try {
            archivo = new File(nombreArchivo);
            FileMananger.GuardarArchivo2(archivo, contentFile);
            jLabel_UrlArchivo.setText(archivo.toString());
            jLabel_NombreArchivo.setText("   " + archivo.getName());
        } catch (Exception e) {
        }
        String[] oldDireccion = new String[]{"DIAGONALARDE", "DIAGONALARIZ", "DIAGONALABDE", "DIAGONALABIZ", "ARRIBA", "ABAJO", "IZQUIERDA", "DERECHA"};
        String[] newDireccion = new String[]{"NORESTE", "NOROESTE", "SURESTE", "SUROESTE", "NORTE", "SUR", "OESTE", "ESTE"};
        for (int i = 0; i < oldDireccion.length; i++) {
            instruccion = instruccion.replaceAll(oldDireccion[i], newDireccion[i]);
        }
        String[] secuencia = instruccion.split("_");
        for (int i = 0; i < secuencia.length; i++) {
            String[] b = secuencia[i].split(":");
            direcciones.add(i, b[0]);
            String[] c = b[1].split("-");
            posiciones.add(i, c[0]);
            retardo.add(i, c[1]);
            model.addElement(direcciones.get(i) + ": " + posiciones.get(i) + " - " + retardo.get(i));
        }
        i = secuencia.length;
        jList_Seciencia.setModel(model);
    }
     
    public void generarNuevaAreaDeTrabajo() {                                              
        InicioEditor startEditor = new InicioEditor();
        if (jLabel_NombreArchivo.getText() == "Archivo sin nombre") {
            if (JOptionPane.showConfirmDialog(null, "¿Realmente desea salir del Editor, sin guardar su archivo?", "SALIR SIN GUARDAR ARCHIVO", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                startEditor.setVisible(true);
                this.dispose();
            } else {
                String datos = "";
                try {
                    matriz = tabla.getMatrix();
                    datos = "" + filas + "<-->" + columnas + "<-->" + encendido + "<-->" + apagado + "<-->" + texto
                            + "\n<-->" + matriz + "<-->"
                            + instruccion;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Asegúrese que el archivo cuente por lo menos con una animación.", "ARCHIVO INCOMPLETO PARA GUARDADO", 0);
                    return;
                }
                if (seleccionar.showDialog(null, "Guardar como") == JFileChooser.APPROVE_OPTION) {
                    archivo = seleccionar.getSelectedFile();
                    if (archivo.getName().endsWith("bl")) {
                        String documento = datos;
                        String mensaje = FileMananger.GuardarArchivo2(archivo, documento);
                        if (mensaje != null) {
                            jLabel_UrlArchivo.setText(archivo.toString());
                            jLabel_NombreArchivo.setText("   " + archivo.getName());
                            JOptionPane.showMessageDialog(null, mensaje);
                        } else {
                            JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible.");
                    }
                    startEditor.setVisible(true);
                    this.dispose();
                }
            }
        } else {
            startEditor.setVisible(true);
            this.dispose();
        }

    }
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Abajo;
    private javax.swing.JButton jButton_Abrir;
    private javax.swing.JButton jButton_AgregarSecuencia;
    private javax.swing.JButton jButton_Aminar;
    private javax.swing.JButton jButton_Arriba;
    private javax.swing.JButton jButton_ColorDefecto;
    private javax.swing.JButton jButton_Derecha;
    private javax.swing.JButton jButton_Detener;
    private javax.swing.JButton jButton_DiagonalABDE;
    private javax.swing.JButton jButton_DiagonalABIZ;
    private javax.swing.JButton jButton_DiagonalARDE;
    private javax.swing.JButton jButton_DiagonalARIZ;
    private javax.swing.JButton jButton_DisminuirAncho;
    private javax.swing.JButton jButton_DisminuirLargo;
    private javax.swing.JButton jButton_DisminuirTamaño;
    private javax.swing.JButton jButton_DuplicarInstruccion;
    private javax.swing.JButton jButton_EditarColor;
    private javax.swing.JButton jButton_EliminarInstruccion;
    private javax.swing.JButton jButton_Graficar;
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JButton jButton_GuardarComo;
    private javax.swing.JButton jButton_IncrementarAncho;
    private javax.swing.JButton jButton_IncrementarLargo;
    private javax.swing.JButton jButton_IncrementarTamaño;
    private javax.swing.JButton jButton_Izquierda;
    private javax.swing.JButton jButton_Modificar;
    private javax.swing.JButton jButton_ModificarPlano;
    private javax.swing.JButton jButton_Nuevo;
    private javax.swing.JButton jButton_Pausar;
    private javax.swing.JButton jButton_RestablecerGrafica;
    private javax.swing.JComboBox<String> jComboBox_ColorAplicado;
    private javax.swing.JComboBox<String> jComboBox_Direcciones;
    private javax.swing.JComboBox<String> jComboBox_EditarTipoGrafico;
    private javax.swing.JComboBox<String> jComboBox_MovimientosEnPantalla;
    private javax.swing.JComboBox<String> jComboBox_Repeticiones;
    private javax.swing.JComboBox<String> jComboBox_SecuenciaDirecciones;
    private javax.swing.JComboBox<String> jComboBox_TipoGrafico;
    private javax.swing.JComboBox<String> jComboBox_TipoPlano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_Color;
    private javax.swing.JLabel jLabel_NombreArchivo;
    private javax.swing.JLabel jLabel_UrlArchivo;
    private javax.swing.JList<String> jList_Seciencia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel_Direcciones;
    private javax.swing.JPanel jPanel_EditarTipoGrafico;
    private javax.swing.JPanel jPanel_MovimientosEnPantalla;
    private javax.swing.JPanel jPanel_TipoGrafico;
    private javax.swing.JPanel jPanel_TipoPlano;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider_Azul;
    private javax.swing.JSlider jSlider_Rojo;
    private javax.swing.JSlider jSlider_TamañoFuente;
    private javax.swing.JSlider jSlider_Verde;
    private javax.swing.JSpinner jSpinner_Azul;
    private javax.swing.JSpinner jSpinner_NumeroColumnas;
    private javax.swing.JSpinner jSpinner_NumeroFilas;
    private javax.swing.JSpinner jSpinner_Posiciones;
    private javax.swing.JSpinner jSpinner_PosicionesEnPantalla;
    private javax.swing.JSpinner jSpinner_Retardo;
    private javax.swing.JSpinner jSpinner_RetardoEnPantalla;
    private javax.swing.JSpinner jSpinner_Rojo;
    private javax.swing.JSpinner jSpinner_SecuenciaPosiciones;
    private javax.swing.JSpinner jSpinner_SecuenciaRetardo;
    private javax.swing.JSpinner jSpinner_TamañoFuente;
    private javax.swing.JSpinner jSpinner_Verde;
    private javax.swing.JTabbedPane jTabbedPane_Editor;
    private javax.swing.JTextField jTextField_CaracterApagado;
    private javax.swing.JTextField jTextField_CaracterEncendido;
    private javax.swing.JTextField jTextField_EditarApagado;
    private javax.swing.JTextField jTextField_EditarEncendido;
    private javax.swing.JTextField jTextField_EditarTextoFigura;
    private javax.swing.JTextField jTextField_TextoFigura;
    private javax.swing.JTextPane jTextPane_Pantalla;
    private javax.swing.JToggleButton jToggleButton_Grosor;
    // End of variables declaration//GEN-END:variables
}
